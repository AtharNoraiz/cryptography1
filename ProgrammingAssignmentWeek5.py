p = 13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084171
g = 11717829880366207009516117596335367088558084999998952205599979459063929499736583746670572176471460312928594829675428279466566527115212748467589894601965568
h = 3239475104050450443565264378728065788649097520952449527834792452971981976143292558073856937958553180532878928001494706097394108577585732452307673444020333
B = 2**20

import sys
from numbthy import invmod,powmod

d = {}
for x1 in xrange(B + 1):
  v = (h * invmod(powmod(g, x1, p), p)) % p
  d[v] = x1

g_b = powmod(g, B, p)
for x0 in xrange(B + 1):
  v = powmod(g_b, x0, p)
  if not v in d:
    continue
  x1 = d[v]
  print (x0 * B + x1) % p
  break
print "Done"
